{"version":3,"sources":["webpack:///./src/views/GraficosCPU.vue","webpack:///./src/components/GraficosCPUIndicador.vue","webpack:///./src/components/GraficosCPUIndicador.vue?8f09","webpack:///./src/views/GraficosCPU.vue?4e6a"],"names":["class","id","estado","iniciar_grafico","type","estado2","iniciar_grafico2","name","data","valor_cpu_free","valor_cpu_usage","descripcion_cpu_free","descripcion_cpu_usage","clienteIP","cliente_razon","methods","addIndicadores","socket","this","on","objeto","descripcion","traerCliente","localStorage","getItem","chart","animation","svg","marginRight","events","load","series","num","x","Date","getTime","console","log","data2","addPoint","parseInt","time","useUTC","title","text","xAxis","tickPixelInterval","yAxis","plotLines","value","width","color","tooltip","headerFormat","pointFormat","legend","enabled","exporting","i","y","push","aplicar_tema","theme","colors","backgroundColor","linearGradient","x1","y1","x2","y2","stops","style","fontFamily","plotBorderColor","textTransform","fontSize","subtitle","gridLineColor","labels","lineColor","minorGridLineColor","tickColor","tickWidth","plotOptions","dataLabels","marker","boxplot","fillColor","candlestick","errorbar","itemStyle","itemHoverStyle","itemHiddenStyle","credits","drilldown","activeAxisLabelStyle","activeDataLabelStyle","navigation","buttonOptions","symbolStroke","fill","rangeSelector","buttonTheme","stroke","states","hover","select","inputBoxBorderColor","inputStyle","labelStyle","navigator","handles","borderColor","outlineColor","maskFill","scrollbar","barBackgroundColor","barBorderColor","buttonArrowColor","buttonBackgroundColor","buttonBorderColor","rifleColor","trackBackgroundColor","trackBorderColor","setOptions","mounted","__exports__","components","GraficosCPUIndicador","render"],"mappings":"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","file":"static/js/chunk-2d0da3ed.a9614b00.js","sourcesContent":["<template>\r\n    <GraficosCPUIndicador/>\r\n</template>\r\n\r\n<script>\r\nimport GraficosCPUIndicador from '@/components/GraficosCPUIndicador.vue'\r\nexport default {\r\n    name: 'GraficoCPUIndicador',\r\n    components:{\r\n        GraficosCPUIndicador\r\n    }\r\n}\r\n</script>","<template>\r\n    <div class=\"row container-fluid text-center col-auto\">\r\n        <div class=\"col-6\">\r\n            <div id=\"container\"></div>\r\n            <div v-if=\"estado == 0\">\r\n                <button @click=\"iniciar_grafico()\" type=\"button\" class=\"btn btn-success mt-2\">Iniciar grafico CPU libre</button>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-6\">\r\n            <div id=\"container2\"></div>\r\n            <div v-if=\"estado2 == 0\">\r\n                <button @click=\"iniciar_grafico2()\" type=\"button\" class=\"btn btn-success mt-2\">Iniciar grafico CPU en uso</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport io from 'socket.io-client';\r\nimport Highcharts from 'highcharts';\r\nimport Exporting from 'highcharts/modules/exporting';\r\nExporting(Highcharts);\r\nexport default {\r\n    name: 'GraficosIndicador',\r\n    data(){\r\n        return {\r\n          valor_cpu_free:'',\r\n          valor_cpu_usage:'',\r\n          descripcion_cpu_free:'',\r\n          descripcion_cpu_usage:'',\r\n          clienteIP:'',\r\n          cliente_razon:'',\r\n          estado: 0,\r\n          estado2: 0,\r\n        }\r\n    },\r\n    methods: {\r\n        addIndicadores(){\r\n            const socket = io(this.clienteIP)\r\n            //CPU FREE\r\n            socket.on('cpu-free', (objeto) => {\r\n                this.valor_cpu_free = objeto.data;\r\n                this.descripcion_cpu_free = objeto.descripcion\r\n            });\r\n            //CPU USAGE\r\n            socket.on('cpu-use', (objeto) => {\r\n                this.valor_cpu_usage = objeto.data;\r\n                this.descripcion_cpu_usage = objeto.descripcion\r\n            });\r\n        },\r\n        traerCliente(){\r\n            this.clienteIP = \"http://\" + localStorage.getItem(\"localIP\");\r\n            this.cliente_razon = localStorage.getItem(\"localRZ\");\r\n        },\r\n        iniciar_grafico()\r\n        {\r\n            this.estado = 1\r\n            const socket = io(this.clienteIP)\r\n            Highcharts.chart('container', {\r\n                chart: {\r\n                    type: 'line',\r\n                    animation: Highcharts.svg,\r\n                    marginRight: 10,\r\n                    events: {\r\n                        load: function () {\r\n                       \r\n                                var series = this.series[0];\r\n                                socket.on('cpu-free', function(num){\r\n                                    var x = (new Date()).getTime();\r\n                                    console.log(num.data2)\r\n                                    series.addPoint([x, parseInt(num.data2)], true, true);\r\n                                }); \r\n                        }\r\n                    },\r\n                    \r\n                },\r\n                time: {\r\n                    useUTC: false\r\n                },\r\n                title: {\r\n                    text: 'Gr√°fico CPU Libre'\r\n                },\r\n                xAxis: {\r\n                    type: 'datetime',\r\n                    tickPixelInterval: 150\r\n                },\r\n                yAxis: {\r\n                    title: {\r\n                        text: ' CPU libre porcentual (%)'\r\n                    },\r\n                    plotLines: [{\r\n                        value: 0,\r\n                        width: 100,\r\n                        color: '#808080'\r\n                    }]\r\n                },\r\n                tooltip: {\r\n                    headerFormat: '<b>{series.name}</b><br/>',\r\n                    pointFormat: '{point.x:%Y-%m-%d %H:%M:%S}<br/>{point.y:.2f}%'\r\n                },\r\n                legend: {\r\n                    enabled: false\r\n                },\r\n                exporting: {\r\n                    enabled: false\r\n                },\r\n                series: [{\r\n                    name: 'Point',\r\n                    data: (function () {\r\n                       \r\n                        var data = [],\r\n                            time = (new Date()).getTime(),\r\n                            i;\r\n                        for (i = -19; i <= 0; i += 1) {\r\n                            var y = null;\r\n                            socket.on('cpu-free', function(num){\r\n                                y = parseInt(num.data2);\r\n                            })\r\n                            data.push({\r\n                                x: time + i * 1000,\r\n                                y: y\r\n                            });\r\n                            \r\n                        }\r\n                        return data;\r\n                    }())\r\n                }]\r\n            });\r\n        },\r\n        iniciar_grafico2()\r\n        {\r\n            this.estado2 = 1\r\n            const socket = io(this.clienteIP)\r\n            Highcharts.chart('container2', {\r\n                chart: {\r\n                    type: 'line',\r\n                    animation: Highcharts.svg,\r\n                    marginRight: 10,\r\n                    events: {\r\n                        load: function () {\r\n                       \r\n                                var series = this.series[0];\r\n                                socket.on('cpu-use', function(num){\r\n                                    var x = (new Date()).getTime();\r\n                                    console.log(num.data2)\r\n                                    series.addPoint([x, parseInt(num.data2)], true, true);\r\n                                }); \r\n                        }\r\n                    },\r\n                    \r\n                },\r\n                time: {\r\n                    useUTC: false\r\n                },\r\n                title: {\r\n                    text: 'Gr√°fico CPU en uso'\r\n                },\r\n                xAxis: {\r\n                    type: 'datetime',\r\n                    tickPixelInterval: 150\r\n                },\r\n                yAxis: {\r\n                    title: {\r\n                        text: ' CPU en uso porcentual (%)'\r\n                    },\r\n                    plotLines: [{\r\n                        value: 0,\r\n                        width: 100,\r\n                        color: '#808080'\r\n                    }]\r\n                },\r\n                tooltip: {\r\n                    headerFormat: '<b>{series.name}</b><br/>',\r\n                    pointFormat: '{point.x:%Y-%m-%d %H:%M:%S}<br/>{point.y:.2f}%'\r\n                },\r\n                legend: {\r\n                    enabled: false\r\n                },\r\n                exporting: {\r\n                    enabled: false\r\n                },\r\n                series: [{\r\n                    name: 'Point',\r\n                    data: (function () {\r\n                       \r\n                        var data = [],\r\n                            time = (new Date()).getTime(),\r\n                            i;\r\n                        for (i = -19; i <= 0; i += 1) {\r\n                            var y = null;\r\n                            socket.on('cpu-use', function(num){\r\n                                y = parseInt(num.data2);\r\n                            })\r\n                            data.push({\r\n                                x: time + i * 1000,\r\n                                y: y\r\n                            });\r\n                            \r\n                        }\r\n                        return data;\r\n                    }())\r\n                }]\r\n            });\r\n        },\r\n        aplicar_tema(){\r\n            Highcharts.theme = {\r\n                colors: ['#2b908f', '#90ee7e', '#f45b5b', '#7798BF', '#aaeeee', '#ff0066',\r\n                    '#eeaaee', '#55BF3B', '#DF5353', '#7798BF', '#aaeeee'],\r\n                chart: {\r\n                    backgroundColor: {\r\n                        linearGradient: { x1: 0, y1: 0, x2: 1, y2: 1 },\r\n                        stops: [\r\n                            [0, '#2a2a2b'],\r\n                            [1, '#3e3e40']\r\n                        ]\r\n                    },\r\n                    style: {\r\n                        fontFamily: '\\'Unica One\\', sans-serif'\r\n                    },\r\n                    plotBorderColor: '#606063'\r\n                },\r\n                title: {\r\n                    style: {\r\n                        color: '#E0E0E3',\r\n                        textTransform: 'uppercase',\r\n                        fontSize: '20px'\r\n                    }\r\n                },\r\n                subtitle: {\r\n                    style: {\r\n                        color: '#E0E0E3',\r\n                        textTransform: 'uppercase'\r\n                    }\r\n                },\r\n                xAxis: {\r\n                    gridLineColor: '#707073',\r\n                    labels: {\r\n                        style: {\r\n                            color: '#E0E0E3'\r\n                        }\r\n                    },\r\n                    lineColor: '#707073',\r\n                    minorGridLineColor: '#505053',\r\n                    tickColor: '#707073',\r\n                    title: {\r\n                        style: {\r\n                            color: '#A0A0A3'\r\n                        }\r\n                    }\r\n                },\r\n                yAxis: {\r\n                    gridLineColor: '#707073',\r\n                    labels: {\r\n                        style: {\r\n                            color: '#E0E0E3'\r\n                        }\r\n                    },\r\n                    lineColor: '#707073',\r\n                    minorGridLineColor: '#505053',\r\n                    tickColor: '#707073',\r\n                    tickWidth: 1,\r\n                    title: {\r\n                        style: {\r\n                            color: '#A0A0A3'\r\n                        }\r\n                    }\r\n                },\r\n                tooltip: {\r\n                    backgroundColor: 'rgba(0, 0, 0, 0.85)',\r\n                    style: {\r\n                        color: '#F0F0F0'\r\n                    }\r\n                },\r\n                plotOptions: {\r\n                    series: {\r\n                        dataLabels: {\r\n                            color: '#F0F0F3',\r\n                            style: {\r\n                                fontSize: '13px'\r\n                            }\r\n                        },\r\n                        marker: {\r\n                            lineColor: '#333'\r\n                        }\r\n                    },\r\n                    boxplot: {\r\n                        fillColor: '#505053'\r\n                    },\r\n                    candlestick: {\r\n                        lineColor: 'white'\r\n                    },\r\n                    errorbar: {\r\n                        color: 'white'\r\n                    }\r\n                },\r\n                legend: {\r\n                    backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n                    itemStyle: {\r\n                        color: '#E0E0E3'\r\n                    },\r\n                    itemHoverStyle: {\r\n                        color: '#FFF'\r\n                    },\r\n                    itemHiddenStyle: {\r\n                        color: '#606063'\r\n                    },\r\n                    title: {\r\n                        style: {\r\n                            color: '#C0C0C0'\r\n                        }\r\n                    }\r\n                },\r\n                credits: {\r\n                    style: {\r\n                        color: '#666'\r\n                    }\r\n                },\r\n                labels: {\r\n                    style: {\r\n                        color: '#707073'\r\n                    }\r\n                },\r\n                drilldown: {\r\n                    activeAxisLabelStyle: {\r\n                        color: '#F0F0F3'\r\n                    },\r\n                    activeDataLabelStyle: {\r\n                        color: '#F0F0F3'\r\n                    }\r\n                },\r\n                navigation: {\r\n                    buttonOptions: {\r\n                        symbolStroke: '#DDDDDD',\r\n                        theme: {\r\n                            fill: '#505053'\r\n                        }\r\n                    }\r\n                },\r\n                rangeSelector: {\r\n                    buttonTheme: {\r\n                        fill: '#505053',\r\n                        stroke: '#000000',\r\n                        style: {\r\n                            color: '#CCC'\r\n                        },\r\n                        states: {\r\n                            hover: {\r\n                                fill: '#707073',\r\n                                stroke: '#000000',\r\n                                style: {\r\n                                    color: 'white'\r\n                                }\r\n                            },\r\n                            select: {\r\n                                fill: '#000003',\r\n                                stroke: '#000000',\r\n                                style: {\r\n                                    color: 'white'\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    inputBoxBorderColor: '#505053',\r\n                    inputStyle: {\r\n                        backgroundColor: '#333',\r\n                        color: 'silver'\r\n                    },\r\n                    labelStyle: {\r\n                        color: 'silver'\r\n                    }\r\n                },\r\n                navigator: {\r\n                    handles: {\r\n                        backgroundColor: '#666',\r\n                        borderColor: '#AAA'\r\n                    },\r\n                    outlineColor: '#CCC',\r\n                    maskFill: 'rgba(255,255,255,0.1)',\r\n                    series: {\r\n                        color: '#7798BF',\r\n                        lineColor: '#A6C7ED'\r\n                    },\r\n                    xAxis: {\r\n                        gridLineColor: '#505053'\r\n                    }\r\n                },\r\n                scrollbar: {\r\n                    barBackgroundColor: '#808083',\r\n                    barBorderColor: '#808083',\r\n                    buttonArrowColor: '#CCC',\r\n                    buttonBackgroundColor: '#606063',\r\n                    buttonBorderColor: '#606063',\r\n                    rifleColor: '#FFF',\r\n                    trackBackgroundColor: '#404043',\r\n                    trackBorderColor: '#404043'\r\n                }\r\n            };\r\n            Highcharts.setOptions(Highcharts.theme);\r\n        }   \r\n    },\r\n    mounted (){\r\n        this.traerCliente();\r\n        this.addIndicadores();\r\n        this.aplicar_tema();\r\n    }\r\n}\r\n</script>","import { render } from \"./GraficosCPUIndicador.vue?vue&type=template&id=46c6a262\"\nimport script from \"./GraficosCPUIndicador.vue?vue&type=script&lang=js\"\nexport * from \"./GraficosCPUIndicador.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\Users\\\\Lautaro Rivas\\\\Desktop\\\\ITS-LR\\\\ProyectoFinal\\\\cliente-monitoreo\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./GraficosCPU.vue?vue&type=template&id=9c840b4c\"\nimport script from \"./GraficosCPU.vue?vue&type=script&lang=js\"\nexport * from \"./GraficosCPU.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\Users\\\\Lautaro Rivas\\\\Desktop\\\\ITS-LR\\\\ProyectoFinal\\\\cliente-monitoreo\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"sourceRoot":""}